{
  "swagger": "2.0",
  "info": {
    "description": "Simple server in order to create and mantain CGA Survey",
    "version": "v1",
    "title": "CGA Survey",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "a@a.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/TrentoCrowdAI/CGA/blob/master/LICENSE"
    }
  },
  "host": "a.com",
  "basePath": "/v1",
  "tags": [
    {
      "name": "AdminApp",
      "description": "A set of APIs designed for administrate the projects"
    },
    {
      "name": "SurveyApp",
      "description": "A set of APIs designed for create/manage the projects"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/projects": {
      "post": {
        "tags": [
          "AdminApp"
        ],
        "summary": "Add a new project",
        "description": "Performed by a user when he wants to create a new project",
        "operationId": "addProject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "project",
            "description": "Project object that needs to be added",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name assigned to the project"
                },
                "description": {
                  "type": "string",
                  "description": "String that describe the project"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/project"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "tags": [
          "AdminApp",
          "SurveyApp"
        ],
        "summary": "Get all projects",
        "description": "Performed by a user in order to get all projects",
        "operationId": "getProjects",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/project"
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/projects/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer",
          "description": "The Project id"
        }
      ],
      "get": {
        "tags": [
          "AdminApp",
          "SurveyApp"
        ],
        "summary": "Get an project by the id",
        "description": "Performed by users in order to get specific project",
        "operationId": "getProject",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/project"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "404": {
            "description": "Project not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "put": {
        "tags": [
          "AdminApp"
        ],
        "summary": "Update an existing project",
        "description": "Performed by a user in order to update the project",
        "operationId": "updateProject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Project object that needs to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Number that identify the project in the system"
                },
                "name": {
                  "type": "string",
                  "description": "Name assigned to the project"
                },
                "description": {
                  "type": "string",
                  "description": "String that describe the project"
                },
                "dataCollections": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/dataCollection"
                  },
                  "description": "DataCollection that compose a project"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/role"
                  },
                  "description": "Roles assigned to the project"
                },
                "members": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/member"
                  },
                  "description": "Members of the project"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/project"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "404": {
            "description": "Project not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "AdminApp"
        ],
        "summary": "Delete a Project by id",
        "description": "Performed by the user in order to delete the Project from the system",
        "operationId": "deleteProject",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/project"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "404": {
            "description": "Project not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/projects/{id}/dataCollections": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer",
          "description": "The Project id"
        }
      ],
      "post": {
        "tags": [
          "AdminApp"
        ],
        "summary": "Add a new DataCollection",
        "description": "Performed by a user when he wants to create a new DataCollection",
        "operationId": "addDataCollection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dataCollection",
            "description": "DataCollection object that needs to be added",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name assigned to the dataCollection"
                },
                "description": {
                  "type": "string",
                  "description": "String that describe the dataCollection"
                },
                "type": {
                  "type": "string",
                  "description": "String that identy the type of the data collection"
                },
                "started": {
                  "$ref": "#/definitions/datetime"
                },
                "ended": {
                  "$ref": "#/definitions/datetime"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/dataCollection"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "tags": [
          "AdminApp",
          "SurveyApp"
        ],
        "summary": "Get all dataCollection",
        "description": "Performed by a user in order to get all dataCollections",
        "operationId": "getAllDataCollections",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dataCollection"
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/projects/{id1}/dataCollections/{id2}": {
      "parameters": [
        {
          "in": "path",
          "name": "id1",
          "required": true,
          "type": "integer",
          "description": "The Project id"
        },
        {
          "in": "path",
          "name": "id2",
          "required": true,
          "type": "integer",
          "description": "The DataCollection id"
        }
      ],
      "get": {
        "tags": [
          "AdminApp",
          "SurveyApp"
        ],
        "summary": "Get an DataCollection by the id",
        "description": "Performed by users in order to get specific DataCollection",
        "operationId": "getDataCollection",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dataCollection"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "404": {
            "description": "DataCollection not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "put": {
        "tags": [
          "AdminApp"
        ],
        "summary": "Update an existing dataCollection",
        "description": "Performed by a user in order to update the dataCollection",
        "operationId": "updateDataCollection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Project object that needs to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Number that identify the dataCollection in the system"
                },
                "name": {
                  "type": "string",
                  "description": "Name assigned to the dataCollection"
                },
                "description": {
                  "type": "string",
                  "description": "String that describe the dataCollection"
                },
                "typology": {
                  "type": "string",
                  "description": "String that identy the type of the data collection"
                },
                "started": {
                  "$ref": "#/definitions/datetime"
                },
                "ended": {
                  "$ref": "#/definitions/datetime"
                },
                "surveys": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/survey"
                  },
                  "description": "Surveys that compose a dataCollection"
                },
                "subjects": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/subject"
                  },
                  "description": "Subject assigned to the project"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/dataCollection"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "404": {
            "description": "DataCollection not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "AdminApp"
        ],
        "summary": "Delete a DataCollection by id",
        "description": "Performed by the user in order to delete the DataCollection from the system",
        "operationId": "deleteDataCollection",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/dataCollection"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "404": {
            "description": "DataCollection not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/projects/{id}/members": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer",
          "description": "The Project id"
        }
      ],
      "post": {
        "tags": [
          "AdminApp"
        ],
        "summary": "Add a new member",
        "description": "Operation to call in order to create a new member in the system",
        "operationId": "addMember",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "member",
            "description": "Member object that needs to be added",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "String that identify the status of the membership in the system"
                },
                "user": {
                  "$ref": "#/definitions/user"
                },
                "createdAt": {
                  "$ref": "#/definitions/datetime"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/member"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "tags": [
          "AdminApp",
          "SurveyApp"
        ],
        "summary": "Get all member",
        "description": "Performed by a user in order to get all members",
        "operationId": "getAllMembers",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/member"
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/projects/{id1}/members/{id2}": {
      "parameters": [
        {
          "in": "path",
          "name": "id1",
          "required": true,
          "type": "integer",
          "description": "The Project id"
        },
        {
          "in": "path",
          "name": "id2",
          "required": true,
          "type": "integer",
          "description": "The Member id"
        }
      ],
      "get": {
        "tags": [
          "AdminApp",
          "SurveyApp"
        ],
        "summary": "Get a member by the id",
        "description": "Performed by users in order to get specific member",
        "operationId": "getMember",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/member"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "404": {
            "description": "Member not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "put": {
        "tags": [
          "AdminApp"
        ],
        "summary": "Update an existing Member",
        "description": "Performed by a user in order to update the Member",
        "operationId": "updateMember",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Member object that needs to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Number that identify the membership in the system"
                },
                "status": {
                  "type": "string",
                  "description": "String that identify the status of the membership in the system"
                },
                "user": {
                  "$ref": "#/definitions/user"
                },
                "role": {
                  "$ref": "#/definitions/role"
                },
                "createdAt": {
                  "$ref": "#/definitions/datetime"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/member"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "404": {
            "description": "Member not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "AdminApp"
        ],
        "summary": "Delete a Member by id",
        "description": "Performed by the user in order to delete the Member from the system",
        "operationId": "deleteMember",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/member"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "404": {
            "description": "Member not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/projects/{id}/roles": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "type": "integer",
          "description": "The Project id"
        }
      ],
      "post": {
        "tags": [
          "AdminApp"
        ],
        "summary": "Add a new role",
        "description": "Operation to call in order to create a new Role in the system",
        "operationId": "addRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "role",
            "description": "Role object that needs to be added",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name assigned to the collectionRole"
                },
                "description": {
                  "type": "string",
                  "description": "String that describe the collectionRole"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/role"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "tags": [
          "AdminApp",
          "SurveyApp"
        ],
        "summary": "Get all role",
        "description": "Performed by a user in order to get all role",
        "operationId": "getAllRole",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/role"
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/projects/{id1}/roles/{id2}": {
      "parameters": [
        {
          "in": "path",
          "name": "id1",
          "required": true,
          "type": "integer",
          "description": "The Project id"
        },
        {
          "in": "path",
          "name": "id2",
          "required": true,
          "type": "integer",
          "description": "The Role id"
        }
      ],
      "get": {
        "tags": [
          "AdminApp",
          "SurveyApp"
        ],
        "summary": "Get a Role by the id",
        "description": "Performed by users in order to get specific Role",
        "operationId": "getRole",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/role"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "404": {
            "description": "Role not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "put": {
        "tags": [
          "AdminApp"
        ],
        "summary": "Update an existing Role",
        "description": "Performed by a user in order to update the Role",
        "operationId": "updateRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Role object that needs to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Number that identify the collectionRole in the system"
                },
                "name": {
                  "type": "string",
                  "description": "Name assigned to the collectionRole"
                },
                "description": {
                  "type": "string",
                  "description": "String that describe the collectionRole"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/role"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "404": {
            "description": "Role not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "AdminApp"
        ],
        "summary": "Delete a Role by id",
        "description": "Performed by the user in order to delete the Role from the system",
        "operationId": "deleteRole",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/role"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "404": {
            "description": "Role not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    }
  },
  "definitions": {
    "project": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Number that identify the project in the system"
        },
        "name": {
          "type": "string",
          "description": "Name assigned to the project"
        },
        "description": {
          "type": "string",
          "description": "String that describe the project"
        },
        "dataCollections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dataCollection"
          },
          "description": "DataCollection that compose a project"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/role"
          },
          "description": "Roles assigned to the project"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/member"
          },
          "description": "Members of the project"
        }
      }
    },
    "dataCollection": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Number that identify the dataCollection in the system"
        },
        "name": {
          "type": "string",
          "description": "Name assigned to the dataCollection"
        },
        "description": {
          "type": "string",
          "description": "String that describe the dataCollection"
        },
        "type": {
          "type": "string",
          "description": "String that identy the type of the data collection"
        },
        "started": {
          "$ref": "#/definitions/datetime"
        },
        "ended": {
          "$ref": "#/definitions/datetime"
        },
        "surveys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/survey"
          },
          "description": "Surveys that compose a dataCollection"
        },
        "subjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/subject"
          },
          "description": "Subject assigned to the project"
        }
      }
    },
    "survey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Number that identify the survey in the system"
        },
        "name": {
          "type": "string",
          "description": "Name assigned to the survey"
        },
        "description": {
          "type": "string",
          "description": "String that describe the survey"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/surveyComponent"
          },
          "description": "SurveyComponent that compose a survey"
        }
      }
    },
    "surveyComponent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Number that identify the SurveyComponent"
        },
        "name": {
          "type": "string",
          "description": "Name thah describe the SurveyComponent"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/surveyItem"
          },
          "description": "Items that compose a surveyComponent"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/role"
          },
          "description": "Roles assigned to the surveyComponent"
        }
      }
    },
    "surveyItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Number that identify the SurveyItem"
        },
        "description": {
          "type": "string",
          "description": "Description for the item"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/label"
          },
          "description": "Objects that allow the surveyItem to be displayed in different languages"
        },
        "type": {
          "type": "string",
          "description": "Name that identify the type of the surveyItemOption"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/surveyItemOption"
          },
          "description": "Option that the user can select"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/surveyImage"
          },
          "description": "Images that could compose the item"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rule"
          },
          "description": "Rules in order to apply consistency checks"
        },
        "validators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/validatorItem"
          },
          "description": "Object in order to validate the user answers"
        },
        "flowConstraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/flowConstraint"
          },
          "description": "FlowConstraints to apply"
        }
      }
    },
    "surveyImage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Number that identify the SurveyItem"
        },
        "title": {
          "type": "string",
          "description": "Description for the item"
        },
        "path": {
          "type": "string",
          "description": "Link/Path to the image file"
        }
      }
    },
    "label": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Number that identify the label"
        },
        "language": {
          "type": "string",
          "description": "Contains the language of the question"
        },
        "values": {
          "type": "string",
          "description": "Contains the question in the language indicated in the language field"
        }
      }
    },
    "flowConstraint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Number that identify the label"
        },
        "typology": {
          "type": "string",
          "description": "Describe the type of constraint"
        },
        "condition": {
          "type": "string",
          "description": "Condition to apply the constraint"
        },
        "value": {
          "type": "string",
          "description": "Value of the constraint"
        }
      }
    },
    "rule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Number that identify the label"
        },
        "item": {
          "type": "integer",
          "description": "id of the previous item in order to check its value"
        },
        "condition": {
          "type": "string",
          "description": "Condition to verify"
        }
      }
    },
    "validatorItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Number that identify the validatorItem in the system"
        },
        "type": {
          "type": "string",
          "description": "Type of the validation value"
        },
        "value": {
          "type": "string",
          "description": "Value in order to validate the data"
        }
      }
    },
    "surveyItemOption": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Number that identify the SurveyItemOption"
        },
        "value": {
          "type": "string",
          "description": "Name that describe the SurveyItemOption"
        },
        "type": {
          "type": "string",
          "description": "Name that identify the type of the surveyItemOption"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/label"
          },
          "description": "Values in order to answer to a specific question"
        }
      }
    },
    "subject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Number that identify the subject in the system"
        },
        "name": {
          "type": "string",
          "description": "Name of the subject"
        },
        "location": {
          "type": "string",
          "description": "Location of the subject"
        },
        "contact": {
          "type": "string",
          "description": "Contact of the subject"
        }
      }
    },
    "role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Number that identify the collectionRole in the system"
        },
        "name": {
          "type": "string",
          "description": "Name assigned to the collectionRole"
        },
        "description": {
          "type": "string",
          "description": "String that describe the collectionRole"
        }
      }
    },
    "member": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Number that identify the membership in the system"
        },
        "status": {
          "type": "string",
          "description": "String that identify the status of the membership in the system"
        },
        "user": {
          "$ref": "#/definitions/user"
        },
        "role": {
          "$ref": "#/definitions/role"
        },
        "createdAt": {
          "$ref": "#/definitions/datetime"
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Number that identify the user in the system"
        },
        "name": {
          "type": "string",
          "description": "String that identify the name of the user"
        }
      }
    },
    "surveyResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Number that identify the surveyResponse in the system"
        },
        "status": {
          "type": "string",
          "description": "String that identify the status of the surveyResponse"
        },
        "createdAt": {
          "$ref": "#/definitions/datetime"
        },
        "subject": {
          "$ref": "#/definitions/subject"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/surveyCompResponse"
          },
          "description": "Values in order to collect surveyComp response"
        }
      }
    },
    "surveyCompResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Number that identify the surveyCompResponse in the system"
        },
        "status": {
          "type": "string",
          "description": "String that identify the status of the surveyResponse"
        },
        "createdAt": {
          "$ref": "#/definitions/datetime"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/surveyItemResponse"
          },
          "description": "Values in order to collect surveyItem response"
        }
      }
    },
    "surveyItemResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Number that identify the surveyItemResponse in the system"
        },
        "name": {
          "type": "string",
          "description": "String that identify the name of the surveyItemResponse"
        },
        "value": {
          "type": "string",
          "description": "Value of the surveyItemResponse"
        }
      }
    },
    "datetime": null
  }
}