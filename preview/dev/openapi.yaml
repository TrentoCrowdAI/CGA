swagger: '2.0'
info:
  description: Simple server in order to create and mantain CGA Survey
  version: v1
  title: CGA Survey
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: a@a.com
  license:
    name: MIT
    url: 'https://github.com/TrentoCrowdAI/CGA/blob/master/LICENSE'
host: a.com
tags:
  - name: AdminApp
    description: A set of APIs designed for administrate the projects
  - name: SurveyApp
    description: A set of APIs designed for create/manage the projects
schemes:
  - https
paths:
  /projects:
    post:
      tags:
        - AdminApp
      summary: Add a new project
      description: Performed by a user when he wants to create a new project
      operationId: createProject
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: project
          description: Project object that needs to be added
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name assigned to the project
              description:
                type: string
                description: String that describe the project
              creation_date:
                type: string
                description: Date and time in which the project has been created
      responses:
        '201':
          description: Successful operation
          schema:
            type: integer
            description: project_id
        '400':
          description: Bad Request
        '403':
          description: Not Authorized
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get all projects
      description: Performed by a user in order to get all projects
      operationId: getProjects
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/project'
        '400':
          description: Bad request
  '/projects/{id}':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The Project id
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get an project by the id
      description: Performed by users in order to get specific project
      operationId: getProjectById
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/project'
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: Project not found
    put:
      tags:
        - AdminApp
      summary: Update an existing project
      description: Performed by a user in order to update the project
      operationId: updateProject
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: project
          description: Project object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the project in the system
              name:
                type: string
                description: Name assigned to the project
              description:
                type: string
                description: String that describe the project
              creation_date:
                type: string
                description: Date and time in which the project has been created
      responses:
        '202':
          description: Successful operation
          schema:
            $ref: '#/definitions/project'
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: Project not found
    delete:
      tags:
        - AdminApp
      summary: Delete a Project by id
      description: Performed by the user in order to delete the Project from the system
      operationId: deleteProject
      produces:
        - application/json
      responses:
        '204':
          description: Successful operation
          schema:
            type: integer
            description: project_id
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: Project not found
  '/projects/{id}/dataCollections':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The Project id
    post:
      tags:
        - AdminApp
      summary: Add a new DataCollection
      description: Performed by a user when he wants to create a new DataCollection
      operationId: createDataCollection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: dataCollection
          description: DataCollection object that needs to be added
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name assigned to the dataCollection
              description:
                type: string
                description: String that describe the dataCollection
              type:
                type: string
                description: String that identy the type of the data collection
              start_date:
                type: string
                description: Date and time in which the data collection is started
              end_date:
                type: string
                description: Date and time in which the data collection will end
      responses:
        '201':
          description: Successful operation
          schema:
            type: integer
            description: data_collection_id
        '400':
          description: Bad Request
        '403':
          description: Not Authorized
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get all dataCollection
      description: Performed by a user in order to get all dataCollections
      operationId: getProjectDataCollections
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/dataCollection'
        '400':
          description: Bad request
  '/projects/{id}/members':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The Project id
    post:
      tags:
        - AdminApp
      summary: Add a new member
      description: Operation to call in order to create a new member in the system
      operationId: addMember
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: member
          description: Member object that needs to be added
          required: true
          schema:
            type: object
            properties:
              status:
                type: string
                description: String that identify the status of the membership in the system
              user_id:
                type: integer
                description: Integer that identify a user
              role_id:
                type: integer
                description: Integer that identify a role
      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/member'
        '400':
          description: Bad Request
    get:
      tags:
        - AdminApp
      summary: Get all member
      description: Performed by a user in order to get all members
      operationId: getAllMembers
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/member'
        '400':
          description: Bad request
  '/projects/{id1}/members/{id2}':
    parameters:
      - in: path
        name: id1
        required: true
        type: integer
        description: The Project id
      - in: path
        name: id2
        required: true
        type: integer
        description: The User id
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get a member by the id
      description: Performed by users in order to get specific member
      operationId: getMember
      produces:
        - application/json
      parameters:
        - in: body
          name: member
          description: Member object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              projectId:
                type: integer
                description: The Project id
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/member'
        '400':
          description: Invalid ids
        '404':
          description: Member not found
    put:
      tags:
        - AdminApp
      summary: Update an existing Member
      description: Performed by a user in order to update the Member
      operationId: updateMember
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: member
          description: Member object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the membership in the system
              status:
                type: string
                description: String that identify the status of the membership in the system
              user_id:
                type: integer
                description: user_id
              role_id:
                type: integer
                description: role_id of the user
              creation_date:
                type: string
                description: The date in which the membership has been add
      responses:
        '202':
          description: Successful operation
          schema:
            $ref: '#/definitions/member'
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: Member not found
    delete:
      tags:
        - AdminApp
      summary: Delete a Member by id
      description: Performed by the user in order to delete the Member from the system
      operationId: deleteMember
      produces:
        - application/json
      responses:
        '204':
          description: Successful operation
          schema:
            type: integer
            description: used_id of the deleted membership
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: Member not found
  /roles/:
    post:
      tags:
        - AdminApp
      summary: Add a new role
      description: Performed by a user when he wants to create a new role
      operationId: createRole
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: role
          description: Project object that needs to be added
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the role in the system
              name:
                type: string
                description: Name assigned to the role
              description:
                type: string
                description: String that describe the role
      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/project'
        '400':
          description: Bad Request
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get all roles
      description: Performed by a user in order to get all roles
      operationId: getRoles
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/role'
        '400':
          description: Bad request
  '/roles/{id}':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The Role id
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get a Role by the id
      description: Performed by users in order to get specific Role
      operationId: getRoleById
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/role'
        '400':
          description: Invalid id
        '404':
          description: Role not found
    put:
      tags:
        - AdminApp
      summary: Update an existing Role
      description: Performed by a user in order to update the Role
      operationId: updateRole
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: role
          description: Role object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the role in the system
              name:
                type: string
                description: Name assigned to the role
              description:
                type: string
                description: String that describe the role
      responses:
        '202':
          description: Successful operation
          schema:
            $ref: '#/definitions/role'
        '400':
          description: Invalid id
        '404':
          description: Role not found
    delete:
      tags:
        - AdminApp
      summary: Delete a Role by id
      description: Performed by the user in order to delete the Role from the system
      operationId: deleteRole
      produces:
        - application/json
      responses:
        '204':
          description: Successful operation
          schema:
            type: integer
            description: role_id of the deleted role
        '400':
          description: Invalid id
        '404':
          description: Role not found
  '/dataCollections/{id}/':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The DataCollection id
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get an DataCollection by the id
      description: Performed by users in order to get specific DataCollection
      operationId: getDataCollectionById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: project_id
          required: true
          description: The Project id
          schema:
            type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/dataCollection'
        '400':
          description: Invalid id
        '404':
          description: DataCollection not found
    put:
      tags:
        - AdminApp
      summary: Update an existing dataCollection
      description: Performed by a user in order to update the dataCollection
      operationId: updateDataCollection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: dataCollection
          description: DataCollection object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the dataCollection in the system
              name:
                type: string
                description: Name assigned to the dataCollection
              description:
                type: string
                description: String that describe the dataCollection
              type:
                type: string
                description: String that identy the type of the data collection
              start_date:
                type: string
                description: Date and time in which the data collection is started
              end_date:
                type: string
                description: Date and time in which the data collection will end
              project_id:
                type: integer
                description: The Project id
      responses:
        '202':
          description: Successful operation
          schema:
            $ref: '#/definitions/dataCollection'
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: DataCollection not found
    delete:
      tags:
        - AdminApp
      summary: Delete a DataCollection by id
      description: Performed by the user in order to delete the DataCollection from the system
      operationId: deleteDataCollection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: project_id
          required: true
          description: The Project id
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/dataCollection'
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: DataCollection not found
  '/dataCollections/{id}/surveys':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The dataCollection id
    post:
      tags:
        - AdminApp
      summary: Add a new survey
      description: Performed by a user when he wants to create a new survey in order to collect patient data
      operationId: createSurvey
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: survey
          description: Survey object that needs to be added
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name assigned to the survey
              description:
                type: string
                description: String that describe the survey
      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/survey'
        '400':
          description: Bad Request
        '403':
          description: Not Authorized
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get all survey
      description: Performed by a user in order to get all surveys
      operationId: getSurveys
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/survey'
        '400':
          description: Bad request
  '/surveys/{id}':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The survey id
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get an survey by the id
      description: Performed by users in order to get specific survey
      operationId: getSurveyById
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: data_collection_id
          required: true
          description: The dataCollection id
          schema:
            type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/survey'
        '400':
          description: Invalid id
        '404':
          description: Survey not found
    put:
      tags:
        - AdminApp
      summary: Update an existing survey
      description: Performed by a user in order to update the survey
      operationId: updateSurvey2
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: survey
          description: Survey object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the survey in the system
              name:
                type: string
                description: Name assigned to the survey
              description:
                type: string
                description: String that describe the survey
              data_collection_id:
                type: integer
                description: The dataCollection id
      responses:
        '202':
          description: Successful operation
          schema:
            $ref: '#/definitions/survey'
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: Survey not found
    delete:
      tags:
        - AdminApp
      summary: Delete a survey by id
      description: Performed by the user in order to delete the survey from the system
      operationId: deleteSurvey2
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: survey
          description: Survey object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the survey in the system
              name:
                type: string
                description: Name assigned to the survey
              description:
                type: string
                description: String that describe the survey
              data_collection_id:
                type: integer
                description: The dataCollection id
      responses:
        '204':
          description: Successful operation
          schema:
            type: integer
            description: survey_id of the delete Survey
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: Survey not found
  '/surveys/{id}/subjects':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The survey id
    post:
      tags:
        - AdminApp
        - SurveyApp
      summary: Add a new subject
      description: Operation to call in order to create a new Subject in the system
      operationId: addSubjectToSurvey
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: subject
          description: Subject object that needs to be added
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the subject in the system
              name:
                type: string
                description: Name of the subject
              location:
                type: string
                description: Location of the subject
              contact:
                type: string
                description: Contact of the subject
      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/subject'
        '400':
          description: Bad Request
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get all subject
      description: Performed by a user in order to get all Subject
      operationId: getSurveySubjects
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/subject'
        '400':
          description: Bad request
  '/surveys/{id}/surveyComponents':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The survey id
    post:
      tags:
        - AdminApp
      summary: Add a new SurveyComponent
      description: Performed by a user when he wants to create a new surveyComponent in order to collect patient data
      operationId: createSurveyComponent
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: SurveyComponent
          description: SurveyComponent object that needs to be added
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name thah describe the SurveyComponent
              role_id:
                type: integer
                description: Role of the user allowed to get this component
      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/surveyComponent'
        '400':
          description: Bad Request
        '403':
          description: Not Authorized
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get all surveyComponent
      description: Performed by a user in order to get all surveyComponent
      operationId: getAllSurveyComponents
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: dataCollectionId
          required: true
          description: The dataCollection id
          schema:
            type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/surveyComponent'
        '400':
          description: Bad request
  '/surveyComponents/{id}':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The surveyComponent id
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get a SurveyComponent by the id
      description: Performed by users in order to get specific SurveyComponent
      operationId: getSurveyComponentById
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/surveyComponent'
        '400':
          description: Invalid id
        '404':
          description: SurveyComponent not found
    put:
      tags:
        - AdminApp
      summary: Update an existing SurveyComponent
      description: Performed by a user in order to update the surveyComponent
      operationId: updateSurveyComponent
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: SurveyComponent object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the SurveyComponent
              name:
                type: string
                description: Name thah describe the SurveyComponent
              role_id:
                type: integer
                description: Role of the user allowed to get this component
              survey_id:
                type: integer
                description: The survey id
      responses:
        '202':
          description: Successful operation
          schema:
            $ref: '#/definitions/surveyComponent'
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: SurveyComponent not found
    delete:
      tags:
        - AdminApp
        - SurveyApp
      summary: Delete a SurveyItem by id
      description: Performed by the user in order to delete the SurveyItem from the system
      operationId: deleteSurveyComponent
      produces:
        - application/json
      responses:
        '204':
          description: Successful operation
          schema:
            type: integer
            description: survey_component_id of the deleted surveyComponent
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: SurveyComponent not found
  '/surveyComponents/{id}/surveyItems':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The surveyComponent id
    post:
      tags:
        - AdminApp
      summary: Add a new SurveyItem
      description: Performed by a user when he wants to create a new SurveyItem
      operationId: createSurveyItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: survey_item
          description: SurveyItem object that needs to be added
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the item
              type:
                type: string
                description: Name that identify the type of the surveyItemOption
      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/surveyItem'
        '400':
          description: Bad Request
        '403':
          description: Bad Request
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get all surveyItem
      description: Performed by a user in order to get all surveyItem
      operationId: getAllSurveyItems
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: surveyId
          required: true
          description: The survey id
          schema:
            type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/surveyItem'
        '400':
          description: Bad request
  '/surveyItems/{id}':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The SurveyItem id
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get a SurveyItem by the id
      description: Performed by users in order to get specific SurveyItem
      operationId: getSurveyItemById
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/surveyItem'
        '400':
          description: Invalid id
        '404':
          description: SurveyItem not found
    put:
      tags:
        - AdminApp
      summary: Update an existing SurveyItem
      description: Performed by a user in order to update the surveyItem
      operationId: updateSurveyItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: survey_item
          description: SurveyItem object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the SurveyItem
              name:
                type: string
                description: Name of the item
              type:
                type: string
                description: Name that identify the type of the surveyItemOption
              survey_component_id:
                type: integer
                description: Id that identify the component of the item
      responses:
        '202':
          description: Successful operation
          schema:
            $ref: '#/definitions/surveyItem'
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: SurveyItem not found
    delete:
      tags:
        - AdminApp
      summary: Delete a SurveyItem by id
      description: Performed by the user in order to delete the SurveyItem from the system
      operationId: deleteSurveyItem
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: surveyComponentId
          required: true
          description: The surveyComponent id
          schema:
            type: integer
      responses:
        '204':
          description: Successful operation
          schema:
            $ref: '#/definitions/surveyItem'
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: SurveyItem not found
  '/surveyItems/{id}/surveyImages':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The SurveyItem id
    post:
      tags:
        - AdminApp
      summary: Add a new SurveyImage
      description: Performed by a user when he wants to create a new SurveyImage
      operationId: addSurveyImage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: SurveyImage
          description: SurveyImage object that needs to be added
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
                description: Description for the item
              path:
                type: string
                description: Link/Path to the image file
              surveyComponentId:
                type: integer
                description: The surveyComponent id
      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/surveyImage'
        '400':
          description: Bad Request
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get all SurveyImage
      description: Performed by a user in order to get all SurveyImage
      operationId: getAllSurveyImages
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: surveyComponentId
          required: true
          description: The surveyComponent id
          schema:
            type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/surveyImage'
        '400':
          description: Bad request
  '/surveyItems/{id1}/surveyImages/{id2}':
    parameters:
      - in: path
        name: id1
        required: true
        type: integer
        description: The SurveyItem id
      - in: path
        name: id2
        required: true
        type: integer
        description: The SurveyImage id
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get a SurveyItem by the id
      description: Performed by users in order to get specific SurveyImage
      operationId: getSurveyImage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: surveyComponentId
          required: true
          description: The surveyComponent id
          schema:
            type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/surveyImage'
        '400':
          description: Invalid id
        '404':
          description: SurveyImage not found
        '405':
          description: Validation exception
    put:
      tags:
        - AdminApp
      summary: Update an existing SurveyImage
      description: Performed by a user in order to update the SurveyImage
      operationId: updateSurveyImage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: SurveyImage object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the SurveyItem
              title:
                type: string
                description: Description for the item
              path:
                type: string
                description: Link/Path to the image file
              surveyComponentId:
                type: integer
                description: The surveyComponent id
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/surveyImage'
        '400':
          description: Invalid id
        '404':
          description: SurveyImage not found
        '405':
          description: Validation exception
    delete:
      tags:
        - AdminApp
      summary: Delete a SurveyImage by id
      description: Performed by the user in order to delete the SurveyImage from the system
      operationId: deleteSurveyImage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: surveyComponentId
          required: true
          description: The surveyComponent id
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/surveyImage'
        '400':
          description: Invalid id
        '404':
          description: SurveyImage not found
        '405':
          description: Validation exception
  '/surveyItems/{id}/labels':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The SurveyItem id
    post:
      tags:
        - AdminApp
      summary: Add a new Label
      description: Performed by a user when he wants to create a new Label
      operationId: createSurveyItemLabel
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: label_survey_item
          description: Label object that needs to be added
          required: true
          schema:
            type: object
            properties:
              language:
                type: string
                description: Contains the language of the question
              content:
                type: string
                description: Contains the question in the language indicated in the language field
      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/label'
        '400':
          description: Bad Request
        '403':
          description: Not Authorized
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get all label
      description: Performed by a user in order to get all Label
      operationId: getAllLabels
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: surveyComponentId
          required: true
          description: The surveyComponent id
          schema:
            type: integer
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/label'
        '400':
          description: Bad request
  '/surveyItems/{id}/options':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The SurveyItem id
    post:
      tags:
        - AdminApp
      summary: Add a new SurveyItemOption
      description: Performed by a user when he wants to create a new SurveyItemOption
      operationId: createSurveyItemOption
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: survey_item_option
          description: SurveyItemOption object that needs to be added
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name that describe the SurveyItemOption
              value:
                type: string
                description: Value of the SurveyItemOption
              type:
                type: string
                description: Name that identify the type of the surveyItemOption
      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/surveyItemOption'
        '400':
          description: Bad Request
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get all SurveyItemOption
      description: Performed by a user in order to get all SurveyItemOption
      operationId: getSurveyItemOptions
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/surveyItemOption'
        '400':
          description: Bad request
  '/labels/{id}':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The Label id
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get a Label by the id
      description: Performed by users in order to get specific Label
      operationId: getSurveyItemLabelById
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/label'
        '400':
          description: Invalid id
        '404':
          description: Label not found
        '405':
          description: Validation exception
    put:
      tags:
        - AdminApp
      summary: Update an existing Label
      description: Performed by a user in order to update the Label
      operationId: updateSurveyItemLabel
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: label_survey_item
          description: Label object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the label
              language:
                type: string
                description: Contains the language of the question
              content:
                type: string
                description: Contains the question in the language indicated in the language field
              survey_component_id:
                type: integer
                description: The surveyComponent id
      responses:
        '202':
          description: Successful operation
          schema:
            $ref: '#/definitions/label'
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: Label not found
    delete:
      tags:
        - AdminApp
      summary: Delete a Label by id
      description: Performed by the user in order to delete the Label from the system
      operationId: deleteSurveyItemLabel
      produces:
        - application/json
      responses:
        '204':
          description: Successful operation
          schema:
            type: integer
            description: label_survey_item id
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: Label not found
  '/options/{id}':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The SurveyItemOption id
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get a SurveyItemOption by the id
      description: Performed by users in order to get specific SurveyItemOption
      operationId: getSurveyItemOptionById
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/surveyItemOption'
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: SurveyItemOption not found
    put:
      tags:
        - AdminApp
      summary: Update an existing SurveyItemOption
      description: Performed by a user in order to update the SurveyItemOption
      operationId: updateSurveyItemOption
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: SurveyItemOption object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the SurveyItemOption
              name:
                type: string
                description: Name that describe the SurveyItemOption
              value:
                type: string
                description: Value of the SurveyItemOption
              type:
                type: string
                description: Name that identify the type of the surveyItemOption
      responses:
        '202':
          description: Successful operation
          schema:
            $ref: '#/definitions/surveyItemOption'
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: SurveyItemOption not found
    delete:
      tags:
        - AdminApp
      summary: Delete a SurveyItemOption by id
      description: Performed by the user in order to delete the SurveyItemOption from the system
      operationId: deleteSurveyItemOption
      produces:
        - application/json
      responses:
        '204':
          description: Successful operation
          schema:
            $ref: '#/definitions/surveyItemOption'
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: SurveyItemOption not found
  '/options/{id}/optionLabels':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The SurveyItemOption id
    post:
      tags:
        - AdminApp
      summary: Add a new Label
      description: Performed by a user when he wants to create a new Label
      operationId: createSurveyOptionLabel
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: label_survey_item_option
          description: Label object that needs to be added
          required: true
          schema:
            type: object
            properties:
              language:
                type: string
                description: Contains the language of the question
              content:
                type: string
                description: Contains the question in the language indicated in the language field
      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/label'
        '400':
          description: Bad Request
        '403':
          description: Not Authorized
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get all label
      description: Performed by a user in order to get all Label
      operationId: getSurveyOptionLabels
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/label'
        '400':
          description: Bad request
  '/optionLabels/{id}':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The optionLabel id
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get a Label by the id
      description: Performed by users in order to get specific Label
      operationId: getSurveyOptionLabelById
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/label'
        '400':
          description: Invalid id
        '404':
          description: Label not found
    put:
      tags:
        - AdminApp
      summary: Update an existing Label
      description: Performed by a user in order to update the Label
      operationId: updateSurveyItemOptionLabel
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: label_survey_item_option
          description: Label object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the label
              language:
                type: string
                description: Contains the language of the question
              content:
                type: string
                description: Contains the question in the language indicated in the language field
              survey_item_option_id:
                type: integer
                description: The survey_item_option id
      responses:
        '202':
          description: Successful operation
          schema:
            $ref: '#/definitions/label'
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: Label not found
    delete:
      tags:
        - AdminApp
      summary: Delete a Label by id
      description: Performed by the user in order to delete the Label from the system
      operationId: deleteSurveyOptionLabel
      produces:
        - application/json
      responses:
        '204':
          description: OK
          schema:
            type: integer
            description: id label_survey_item_option deleted
        '400':
          description: Invalid id
        '403':
          description: Not Authorized
        '404':
          description: Label not found
  '/surveyResponses/{id}':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The SurveyResponse id
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get a surveyResponse by the id
      description: Performed by surveyResponses in order to get specific surveyResponse
      operationId: getSurveyResponseById
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/surveyResponse'
        '400':
          description: Invalid id
        '404':
          description: SurveyResponse not found
    put:
      tags:
        - AdminApp
        - SurveyApp
      summary: Update an existing SurveyResponse
      description: Performed by a surveyResponse in order to update the SurveyResponse
      operationId: updateSurveyResponse
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: SurveyResponse object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the surveyResponse in the system
              status:
                type: string
                description: String that identify the status of the surveyResponse
              creation_date:
                type: string
                description: Date in which the response has been add
              subject_id:
                type: integer
                description: Id of the subject
              survey_id:
                type: integer
                description: Number that identify the data survey in the system
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/surveyResponse'
        '400':
          description: Invalid id
        '404':
          description: SurveyResponse not found
    delete:
      tags:
        - AdminApp
        - SurveyApp
      summary: Delete a SurveyResponse by id
      description: Performed by the surveyResponse in order to delete the SurveyResponse from the system
      operationId: deleteSurveyResponse
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/surveyResponse'
        '400':
          description: Invalid id
        '404':
          description: SurveyResponse not found
        '405':
          description: Validation exception
  '/surveyResponses/{id}/componentResponses':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The SurveyResponse id
    post:
      tags:
        - AdminApp
        - SurveyApp
      summary: Add a new surveyCompResponse
      description: Operation to call in order to create a new surveyCompResponse in the system
      operationId: addSurveyCompResponse
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: survey_response
          description: SurveyCompResponse object that needs to be added
          required: true
          schema:
            type: object
            properties:
              user_id:
                type: integer
                description: Id of the user that collected the data
      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/surveyCompResponse'
        '400':
          description: Bad Request
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get all surveyCompResponse
      description: Performed by a surveyCompResponse in order to get all surveyCompResponses
      operationId: getSurveyComponentResponses
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/surveyCompResponse'
        '400':
          description: Bad request
  '/componentResponses/{id}':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The SurveyCompResponse id
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get a surveyCompResponse by the id
      description: Performed by surveyCompResponses in order to get specific surveyCompResponse
      operationId: getSurveyCompResponseById
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/surveyCompResponse'
        '400':
          description: Invalid id
        '404':
          description: SurveyCompResponse not found
    put:
      tags:
        - AdminApp
        - SurveyApp
      summary: Update an existing SurveyCompResponse
      description: Performed by a surveyCompResponse in order to update the SurveyCompResponse
      operationId: updateSurveyCompResponse
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: survey_component_response
          description: SurveyCompResponse object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the surveyCompResponse in the system
              status:
                type: string
                description: String that identify the status of the surveyResponse
              creation_date:
                type: string
                description: Date in which the component has been add
              user_id:
                type: integer
                description: Id of the user that collected the data
      responses:
        '202':
          description: Successful operation
          schema:
            $ref: '#/definitions/surveyCompResponse'
        '400':
          description: Invalid id
        '404':
          description: SurveyCompResponse not found
    delete:
      tags:
        - AdminApp
        - SurveyApp
      summary: Delete a SurveyCompResponse by id
      description: Performed by the surveyCompResponse in order to delete the SurveyCompResponse from the system
      operationId: deleteSurveyCompResponse
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: surveyResponseId
          required: true
          description: The surveyResponse id
          schema:
            type: integer
      responses:
        '204':
          description: Successful operation
          schema:
            $ref: '#/definitions/surveyCompResponse'
        '400':
          description: Invalid id
        '404':
          description: SurveyCompResponse not found
  '/componentResponses/{id}/surveyItemResponses':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The SurveyCompResponse id
    post:
      tags:
        - AdminApp
        - SurveyApp
      summary: Add a new surveyItemResponse
      description: Operation to call in order to create a new surveyItemResponse in the system
      operationId: addSurveyItemResponse
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: survey_item_response
          description: SurveyItemResponse object that needs to be added
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: String that identify the name of the surveyItemResponse
              value:
                type: string
                description: Value of the surveyItemResponse
              survey_item_Id:
                type: integer
                description: The surveyItem id
      responses:
        '201':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/surveyItemResponse'
        '400':
          description: Bad Request
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get all surveyItemResponse
      description: Performed by a surveyItemResponse in order to get all surveyItemResponses
      operationId: getSurveyItemResponses
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/surveyItemResponse'
        '400':
          description: Bad request
  '/surveyItemResponses/{id}':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The SurveyItemResponse id
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get a surveyItemResponse by the id
      description: Performed by surveyItemResponses in order to get specific surveyItemResponse
      operationId: getSurveyItemResponseById
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/surveyItemResponse'
        '400':
          description: Invalid id
        '404':
          description: SurveyItemResponse not found
    put:
      tags:
        - AdminApp
        - SurveyApp
      summary: Update an existing SurveyItemResponse
      description: Performed by a surveyItemResponse in order to update the SurveyItemResponse
      operationId: updateSurveyItemResponse
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: SurveyItemResponse object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the surveyItemResponse in the system
              name:
                type: string
                description: String that identify the name of the surveyItemResponse
              value:
                type: string
                description: Value of the surveyItemResponse
              survey_item_Id:
                type: integer
                description: The surveyItem id
              survey_component_response_id:
                type: integer
                description: The surveyComponent id
      responses:
        '202':
          description: Successful operation
          schema:
            $ref: '#/definitions/surveyItemResponse'
        '400':
          description: Invalid id
        '404':
          description: SurveyItemResponse not found
    delete:
      tags:
        - AdminApp
        - SurveyApp
      summary: Delete a SurveyItemResponse by id
      description: Performed by the surveyItemResponse in order to delete the SurveyItemResponse from the system
      operationId: deleteSurveyItemResponse
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: surveyResponseId
          required: true
          description: The surveyResponse id
          schema:
            type: integer
      responses:
        '204':
          description: Successful operation
          schema:
            $ref: '#/definitions/surveyItemResponse'
        '400':
          description: Invalid id
        '404':
          description: SurveyItemResponse not found
  /users:
    post:
      tags:
        - AdminApp
        - SurveyApp
      summary: Add a new user
      description: Operation to call in order to create a new user in the system
      operationId: createUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: User object that needs to be added
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the user in the system
              name:
                type: string
                description: String that identify the name of the user
              surname:
                type: string
                description: String that identify the surname of the user
      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/user'
        '400':
          description: Bad Request
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get all user
      description: Performed by a user in order to get all users
      operationId: getUsers
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/user'
        '400':
          description: Bad request
  '/users/{id}':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The User id
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get a user by the id
      description: Performed by users in order to get specific user
      operationId: getUserById
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user'
        '400':
          description: Invalid id
        '404':
          description: User not found
    put:
      tags:
        - AdminApp
      summary: Update an existing User
      description: Performed by a user in order to update the User
      operationId: updateUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the user in the system
              name:
                type: string
                description: String that identify the name of the user
              surname:
                type: string
                description: String that identify the surname of the user
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/user'
        '400':
          description: Invalid id
        '404':
          description: User not found
    delete:
      tags:
        - AdminApp
        - SurveyApp
      summary: Delete a User by id
      description: Performed by the user in order to delete the User from the system
      operationId: deleteUser
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/user'
        '400':
          description: Invalid id
        '404':
          description: User not found
  /subjects:
    post:
      tags:
        - AdminApp
        - SurveyApp
      summary: Add a new subject
      description: Operation to call in order to create a new subject in the system
      operationId: addSubject
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: subject
          description: Subject object that needs to be added
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the subject
              location:
                type: string
                description: Location of the subject
              contact:
                type: string
                description: Contact of the subject
      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/subject'
        '400':
          description: Bad Request
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get all subject
      description: Performed by a user in order to get all subjects
      operationId: getAllSubjects
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/subject'
        '400':
          description: Bad request
  '/subjects/{id}':
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        description: The Subject id
    get:
      tags:
        - AdminApp
        - SurveyApp
      summary: Get a subject by the id
      description: Performed by users in order to get specific subject
      operationId: getSubjectById
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/subject'
        '400':
          description: Invalid id
        '404':
          description: Subject not found
    put:
      tags:
        - AdminApp
      summary: Update an existing Subject
      description: Performed by a user in order to update the Subject
      operationId: updateSubject
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: subject
          description: Subject object that needs to be updated
          required: true
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Number that identify the subject in the system
              name:
                type: string
                description: Name of the subject
              location:
                type: string
                description: Location of the subject
              contact:
                type: string
                description: Contact of the subject
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/subject'
        '400':
          description: Invalid id
        '404':
          description: Subject not found
    delete:
      tags:
        - AdminApp
        - SurveyApp
      summary: Delete a Subject by id
      description: Performed by the user in order to delete the Subject from the system
      operationId: deleteSubject
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/subject'
        '400':
          description: Invalid id
        '404':
          description: Subject not found
definitions:
  project:
    type: object
    properties:
      id:
        type: integer
        description: Number that identify the project in the system
      name:
        type: string
        description: Name assigned to the project
      description:
        type: string
        description: String that describe the project
      creation_date:
        type: string
        description: Date and time in which the project has been created
      dataCollections:
        type: array
        items:
          $ref: '#/definitions/dataCollection'
        description: DataCollection that compose a project
      roles:
        type: array
        items:
          $ref: '#/definitions/role'
        description: Roles assigned to the project
      members:
        type: array
        items:
          $ref: '#/definitions/member'
        description: Members of the project
  dataCollection:
    type: object
    properties:
      id:
        type: integer
        description: Number that identify the dataCollection in the system
      name:
        type: string
        description: Name assigned to the dataCollection
      description:
        type: string
        description: String that describe the dataCollection
      type:
        type: string
        description: String that identy the type of the data collection
      start_date:
        type: string
        description: Date and time in which the data collection is started
      end_date:
        type: string
        description: Date and time in which the data collection will end
      surveys:
        type: array
        items:
          $ref: '#/definitions/survey'
        description: Surveys that compose a dataCollection
      subjects:
        type: array
        items:
          $ref: '#/definitions/subject'
        description: Subject assigned to the project
  survey:
    type: object
    properties:
      id:
        type: integer
        description: Number that identify the survey in the system
      name:
        type: string
        description: Name assigned to the survey
      description:
        type: string
        description: String that describe the survey
      components:
        type: array
        items:
          $ref: '#/definitions/surveyComponent'
        description: SurveyComponent that compose a survey
  surveyComponent:
    type: object
    properties:
      id:
        type: integer
        description: Number that identify the SurveyComponent
      name:
        type: string
        description: Name thah describe the SurveyComponent
      role_id:
        type: integer
        description: Role of the user allowed to get this component
      survey_id:
        type: integer
        description: The survey id
      items:
        type: array
        items:
          $ref: '#/definitions/surveyItem'
        description: Items that compose a surveyComponent
  surveyItem:
    type: object
    properties:
      id:
        type: integer
        description: Number that identify the SurveyItem
      name:
        type: string
        description: Name of the item
      type:
        type: string
        description: Name that identify the type of the surveyItemOption
      labels:
        type: array
        items:
          $ref: '#/definitions/label'
        description: Objects that allow the surveyItem to be displayed in different languages
      options:
        type: array
        items:
          $ref: '#/definitions/surveyItemOption'
        description: Option that the user can select
      images:
        type: array
        items:
          $ref: '#/definitions/surveyImage'
        description: Images that could compose the item
      survey_component_id:
        type: integer
        description: Id that identify the component of the item
  surveyImage:
    type: object
    properties:
      id:
        type: integer
        description: Number that identify the SurveyItem
      title:
        type: string
        description: Description for the item
      path:
        type: string
        description: Link/Path to the image file
  label:
    type: object
    properties:
      id:
        type: integer
        description: Number that identify the label
      language:
        type: string
        description: Contains the language of the question
      values:
        type: string
        description: Contains the question in the language indicated in the language field
  surveyItemOption:
    type: object
    properties:
      id:
        type: integer
        description: Number that identify the SurveyItemOption
      value:
        type: string
        description: Name that describe the SurveyItemOption
      type:
        type: string
        description: Name that identify the type of the surveyItemOption
      labels:
        type: array
        items:
          $ref: '#/definitions/label'
        description: Values in order to answer to a specific question
  subject:
    type: object
    properties:
      id:
        type: integer
        description: Number that identify the subject in the system
      name:
        type: string
        description: Name of the subject
      location:
        type: string
        description: Location of the subject
      contact:
        type: string
        description: Contact of the subject
  role:
    type: object
    properties:
      id:
        type: integer
        description: Number that identify the role in the system
      name:
        type: string
        description: Name assigned to the collectionRole
      description:
        type: string
        description: String that describe the collectionRole
  member:
    type: object
    properties:
      id:
        type: integer
        description: Number that identify the membership in the system
      status:
        type: string
        description: String that identify the status of the membership in the system
      user_id:
        type: integer
        description: user_id
      role_id:
        type: integer
        description: role_id of the user
      creation_date:
        type: string
        description: The date in which the membership has been add
  user:
    type: object
    properties:
      id:
        type: integer
        description: Number that identify the user in the system
      name:
        type: string
        description: String that identify the name of the user
      surname:
        type: string
        description: String that identify the surname of the user
  surveyResponse:
    type: object
    properties:
      id:
        type: integer
        description: Number that identify the surveyResponse in the system
      status:
        type: string
        description: String that identify the status of the surveyResponse
      creation_date:
        type: string
        description: Date in which the response has been add
      subject_id:
        type: integer
        description: Id of the subject
      survey_id:
        type: integer
        description: Number that identify the data survey in the system
      components:
        type: array
        items:
          $ref: '#/definitions/surveyCompResponse'
        description: Values in order to collect surveyComp response
  surveyCompResponse:
    type: object
    properties:
      id:
        type: integer
        description: Number that identify the surveyCompResponse in the system
      status:
        type: string
        description: String that identify the status of the surveyResponse
      creation_date:
        type: string
        description: Date in which the component has been add
      user_id:
        type: integer
        description: Id of the user that collected the data
      items:
        type: array
        items:
          $ref: '#/definitions/surveyItemResponse'
        description: Values in order to collect surveyItem response
  surveyItemResponse:
    type: object
    properties:
      id:
        type: integer
        description: Number that identify the surveyItemResponse in the system
      name:
        type: string
        description: String that identify the name of the surveyItemResponse
      value:
        type: string
        description: Value of the surveyItemResponse
