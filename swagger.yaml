swagger: "2.0"
info:
  description: "Simple server in order to create and mantain CGA Survey"
  version: "1.0.0"
  title: "CGA Survey"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "a@a.com"
  license:
    name: "MIT"
    url: "https://github.com/TrentoCrowdAI/CGA/blob/master/LICENSE"
host: "a.com"
basePath: "/v1"
tags:
- name: "survey"
  description: "Access/Modify the survey"
- name: "surveyComponent"
  description: "Components that compose the survey"
- name: "surveyItem"
  description: "Items that compose a surveyComponent"
- name: "label"
  description: "Label assigned to a surveyComponent"
- name: "surveyItemOption"
  description: "Options that compose a surveyItem"
- name: "user"
  description: "User member of the system"
- name: "datetime"
  description: "Object that represents a time and a date"

schemes:
- "https"
paths:
  /survey:
    post:
      tags:
      - "survey"
      summary: "Add a new survey"
      description: "Performed by a user when he wants to create a new survey in order to collect patient data"
      operationId: "addSurvey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "survey"
        description: "Survey object that needs to be added"
        required: true
        schema:
          type: "object"
          properties:
            name:
              type: "string"
              description: "Name assigned to the survey"
            description:
              type: "string"
              description: "String that describe the survey"
            components:
              type: "array"
              items:
                $ref: "#/definitions/surveyComponent"
              description: "SurveyComponent that compose a survey"
      responses:
        201:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/survey"
        400:
          description: "Bad Request"
    get:
      tags:
      - "survey"
      summary: "Get all survey"
      description: "Performed by a user in order to get all surveys"
      operationId: "getSurveys"
      produces:
      - "application/json"
      parameters:
      - in: query
        name: "sortSurveyBy"
        type: string
        enum: ["alpha", "date"]
        description: "Decide how to sort surveys"
        default: "alpha"
      - in: query
        name: "beforeDate"
        type: string
        description: "Gets only the surveys created before the date passed as parameter"
      - in: query
        name: "afterDate"
        type: string
        description: "Gets only the surveys created after the date passed as parameter"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/survey"
        400:
          description: "Bad request"
  /survey/{id}:
    parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The survey id
    get:
      tags:
      - "survey"
      summary: "Get an survey by the id"
      description: "Performed by users in order to get specific survey"
      operationId: "getSurvey"
      produces:
      - "application/json"
      parameters:
      - in: query
        name: "sortSurveyBy"
        type: string
        enum: ["alpha", "date"]
        description: "Decide how to sort surveys"
        default: "alpha"
      - in: query
        name: "beforeDate"
        type: string
        description: "Gets only the surveys created before the date passed as parameter"
      - in: query
        name: "afterDate"
        type: string
        description: "Gets only the surveys created after the date passed as parameter"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/survey"
        400:
          description: "Invalid id"
        404:
          description: "Survey not found"
        405:
          description: "Validation exception"
    put:
      tags:
      - "survey"
      summary: "Update an existing survey"
      description: "Performed by a user in order to update the survey"
      operationId: "updateSurvey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Survey object that needs to be updated"
        required: true
        schema:
          type: "object"
          properties:
            id:
              type: "integer"
              description: "Number that identify the survey in the system"
            name:
              type: "string"
              description: "Name assigned to the survey"
            description:
              type: "string"
              description: "String that describe the survey"
            components:
              type: "array"
              items:
                $ref: "#/definitions/surveyComponent"
              description: "SurveyComponent that compose a survey"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/survey"
        400:
          description: "Invalid id"
        404:
          description: "Survey not found"
        405:
          description: "Validation exception"
    delete:
      tags:
      - "survey"
      summary: "Delete a survey by id"
      description: "Performed by the user in order to delete the survey from the system"
      operationId: "deleteSurvey"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/survey"
        400:
          description: "Invalid id"
        404:
          description: "Survey not found"
        405:
          description: "Validation exception"
  /surveyComponent:
    post:
      tags:
      - "surveyComponent"
      summary: "Add a new SurveyComponent"
      description: "Performed by a user when he wants to create a new surveyComponent in order to collect patient data"
      operationId: "addSurveyComponent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "SurveyComponent"
        description: "SurveyComponent object that needs to be added"
        required: true
        schema:
          type: "object"
          properties:
            name:
              type: "string"
              description: "Name thah describe the SurveyComponent"
            items:
              type: "object"
              items:
                $ref: "#/definitions/surveyItem"
              description: "Items that compose a surveyComponent"
      responses:
        201:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/surveyComponent"
        400:
          description: "Bad Request"
    get:
      tags:
      - "surveyComponent"
      summary: "Get all surveyComponent"
      description: "Performed by a user in order to get all surveyComponent"
      operationId: "getAllSurveyComponent"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/surveyComponent"
        400:
          description: "Bad request"
  /surveyComponent/{id}:
    parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The SurveyComponent id
    get:
      tags:
      - "surveyComponent"
      summary: "Get a SurveyComponent by the id"
      description: "Performed by users in order to get specific SurveyComponent"
      operationId: "getSurveyComponent"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/surveyComponent"
        400:
          description: "Invalid id"
        404:
          description: "SurveyComponent not found"
        405:
          description: "Validation exception"
    put:
      tags:
      - "surveyComponent"
      summary: "Update an existing SurveyComponent"
      description: "Performed by a user in order to update the surveyComponent"
      operationId: "updateSurveyComponent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "SurveyComponent object that needs to be updated"
        required: true
        schema:
          type: "object"
          properties:
            id:
              type: "integer"
              description: "Number that identify the SurveyComponent"
            name:
              type: "string"
              description: "Name thah describe the SurveyComponent"
            items:
              type: "object"
              items:
                $ref: "#/definitions/surveyItem"
              description: "Items that compose a surveyComponent"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/surveyComponent"
        400:
          description: "Invalid id"
        404:
          description: "SurveyComponent not found"
        405:
          description: "Validation exception"
    delete:
      tags:
      - "surveyComponent"
      summary: "Delete a SurveyItem by id"
      description: "Performed by the user in order to delete the SurveyItem from the system"
      operationId: "deleteSurveyComponent"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/surveyComponent"
        400:
          description: "Invalid id"
        404:
          description: "SurveyComponent not found"
        405:
          description: "Validation exception"
  /surveyItem:
    post:
      tags:
      - "surveyItem"
      summary: "Add a new SurveyItem"
      description: "Performed by a user when he wants to create a new SurveyItem"
      operationId: "addSurveyItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "SurveyItem"
        description: "SurveyItem object that needs to be added"
        required: true
        schema:
          type: "object"
          properties:
            name:
              type: "string"
              description: "Name that describe the SurveyComponent"
            labels:
              type: "array"
              items:
                $ref: "#/definitions/label"
              description: "Objects that allow the surveyItem to be displayed in different languages"
            options:
              type: "array"
              items:
                $ref: "#/definitions/surveyItemOption"
              description: "Object that contains the options in order to response to the surveyItem"
      responses:
        201:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/surveyItem"
        400:
          description: "Bad Request"
    get:
      tags:
      - "surveyItem"
      summary: "Get all surveyItem"
      description: "Performed by a user in order to get all surveyItem"
      operationId: "getAllSurveyItem"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/surveyItem"
        400:
          description: "Bad request"
  /surveyItem/{id}:
    parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The SurveyItem id
    get:
      tags:
      - "surveyItem"
      summary: "Get a SurveyItem by the id"
      description: "Performed by users in order to get specific SurveyItem"
      operationId: "getSurveyItem"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/surveyItem"
        400:
          description: "Invalid id"
        404:
          description: "SurveyItem not found"
        405:
          description: "Validation exception"
    put:
      tags:
      - "surveyItem"
      summary: "Update an existing SurveyItem"
      description: "Performed by a user in order to update the surveyItem"
      operationId: "updateSurveyItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "SurveyItem object that needs to be updated"
        required: true
        schema:
          type: "object"
          properties:
            id:
              type: "integer"
              description: "Number that identify the SurveyItem"
            name:
              type: "string"
              description: "Name that describe the SurveyComponent"
            labels:
              type: "array"
              items:
                $ref: "#/definitions/label"
              description: "Objects that allow the surveyItem to be displayed in different languages"
            options:
              type: "array"
              items:
                $ref: "#/definitions/surveyItemOption"
              description: "Object that contains the options in order to response to the surveyItem"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/surveyItem"
        400:
          description: "Invalid id"
        404:
          description: "SurveyItem not found"
        405:
          description: "Validation exception"
    delete:
      tags:
      - "surveyItem"
      summary: "Delete a SurveyItem by id"
      description: "Performed by the user in order to delete the SurveyItem from the system"
      operationId: "deleteSurveyItem"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/surveyItem"
        400:
          description: "Invalid id"
        404:
          description: "SurveyItem not found"
        405:
          description: "Validation exception"
  /label:
    post:
      tags:
      - "label"
      summary: "Add a new Label"
      description: "Performed by a user when he wants to create a new Label"
      operationId: "addLabel"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "Label"
        description: "Label object that needs to be added"
        required: true
        schema:
          type: "object"
          properties:
            language:
              type: "string"
              description: "Contains the language of the question"
            content:
              type: "string"
              description: "Contains the question in the language indicated in the language field"
      responses:
        201:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/label"
        400:
          description: "Bad Request"
    get:
      tags:
      - "label"
      summary: "Get all label"
      description: "Performed by a user in order to get all Label"
      operationId: "getAllLabel"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/label"
        400:
          description: "Bad request"
  /label/{id}:
    parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The Label id
    get:
      tags:
      - "label"
      summary: "Get a Label by the id"
      description: "Performed by users in order to get specific Label"
      operationId: "getLabel"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/label"
        400:
          description: "Invalid id"
        404:
          description: "Label not found"
        405:
          description: "Validation exception"
    put:
      tags:
      - "label"
      summary: "Update an existing Label"
      description: "Performed by a user in order to update the Label"
      operationId: "updateLabel"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Label object that needs to be updated"
        required: true
        schema:
          type: "object"
          properties:
            id:
              type: "integer"
              description: "Number that identify the label"
            language:
              type: "string"
              description: "Contains the language of the question"
            content:
              type: "string"
              description: "Contains the question in the language indicated in the language field"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/label"
        400:
          description: "Invalid id"
        404:
          description: "Label not found"
        405:
          description: "Validation exception"
    delete:
      tags:
      - "label"
      summary: "Delete a Label by id"
      description: "Performed by the user in order to delete the Label from the system"
      operationId: "deleteLabel"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/label"
        400:
          description: "Invalid id"
        404:
          description: "Label not found"
        405:
          description: "Validation exception"
  /surveyItemOption:
    post:
      tags:
      - "surveyItemOption"
      summary: "Add a new SurveyItemOption"
      description: "Performed by a user when he wants to create a new SurveyItemOption"
      operationId: "addSurveyItemOption"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "surveyItemOption"
        description: "SurveyItemOption object that needs to be added"
        required: true
        schema:
          type: "object"
          properties:
            name:
              type: "string"
              description: "Name that describe the SurveyItemOption"
            value:
              type: "string"
              description: ""
            type:
              type: "string"
              description: "Name that identify the type of the surveyItemOption"
      responses:
        201:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/surveyItemOption"
        400:
          description: "Bad Request"
    get:
      tags:
      - "surveyItemOption"
      summary: "Get all SurveyItemOption"
      description: "Performed by a user in order to get all SurveyItemOption"
      operationId: "getAllSurveyItemOption"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/surveyItemOption"
        400:
          description: "Bad request"
  /surveyItemOption/{id}:
    parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The SurveyItemOption id
    get:
      tags:
      - "surveyItemOption"
      summary: "Get a SurveyItemOption by the id"
      description: "Performed by users in order to get specific SurveyItemOption"
      operationId: "getSurveyItemOption"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/surveyItemOption"
        400:
          description: "Invalid id"
        404:
          description: "SurveyItemOption not found"
        405:
          description: "Validation exception"
    put:
      tags:
      - "surveyItemOption"
      summary: "Update an existing SurveyItemOption"
      description: "Performed by a user in order to update the SurveyItemOption"
      operationId: "updateSurveyItemOption"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "SurveyItemOption object that needs to be updated"
        required: true
        schema:
          type: "object"
          properties:
            id:
              type: "integer"
              description: "Number that identify the SurveyItemOption"
            name:
              type: "string"
              description: "Name that describe the SurveyItemOption"
            value:
              type: "string"
              description: ""
            type:
              type: "string"
              description: "Name that identify the type of the surveyItemOption"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/surveyItemOption"
        400:
          description: "Invalid id"
        404:
          description: "SurveyItemOption not found"
        405:
          description: "Validation exception"
    delete:
      tags:
      - "surveyItemOption"
      summary: "Delete a SurveyItemOption by id"
      description: "Performed by the user in order to delete the SurveyItemOption from the system"
      operationId: "deleteSurveyItemOption"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/surveyItemOption"
        400:
          description: "Invalid id"
        404:
          description: "SurveyItemOption not found"
        405:
          description: "Validation exception"
  /user:
    post:
      tags:
      - "user"
      summary: "Add a new user"
      description: "Operation to call in order to create a new user in the system"
      operationId: "addUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: "user"
        description: "User object that needs to be added"
        required: true
        schema:
          type: "object"
          properties:
            name:
              type: "string"
              description: "Name of the user"
            surname:
              type: "string"
              description: "Surname of the user"
            email:
              type: "string"
              description: "Email of the user"
            username:
              type: "string"
              description: "Username of the user"
            role:
              type: "string"
              description: "Role of the user in the system"
      responses:
        201:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/user"
        400:
          description: "Bad Request"

definitions:
  survey:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Number that identify the survey in the system"
      name:
        type: "string"
        description: "Name assigned to the survey"
      description:
        type: "string"
        description: "String that describe the survey"
      components:
        type: "array"
        items:
          $ref: "#/definitions/surveyComponent"
        description: "SurveyComponent that compose a survey"
  surveyComponent:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Number that identify the SurveyComponent"
      name:
        type: "string"
        description: "Name thah describe the SurveyComponent"
      items:
        type: "object"
        items:
          $ref: "#/definitions/surveyItem"
        description: "Items that compose a surveyComponent"
  surveyItem:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Number that identify the SurveyItem"
      name:
        type: "string"
        description: "Name that describe the SurveyComponent"
      labels:
        type: "array"
        items:
          $ref: "#/definitions/label"
        description: "Objects that allow the surveyItem to be displayed in different languages"
      options:
        type: "array"
        items:
          $ref: "#/definitions/surveyItemOption"
        description: "Object that contains the options in order to response to the surveyItem"
  label:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Number that identify the label"
      language:
        type: "string"
        description: "Contains the language of the question"
      content:
        type: "string"
        description: "Contains the question in the language indicated in the language field"
  surveyItemOption:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Number that identify the SurveyItemOption"
      name:
        type: "string"
        description: "Name that describe the SurveyItemOption"
      value:
        type: "string"
        description: ""
      type:
        type: "string"
        description: "Name that identify the type of the surveyItemOption"
  user:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Number that identify the user in the system"
      name:
        type: "string"
        description: "Name of the user"
      surname:
        type: "string"
        description: "Surname of the user"
      email:
        type: "string"
        description: "Email of the user"
      username:
        type: "string"
        description: "Username of the user"
      role:
        type: "string"
        description: "Role of the user in the system"
  datetime:
    type: object
    properties:
      year:
        type: "integer"
        format: "int64"
        minimum: 1900
      month:
        type: "integer"
        format: "int32"
        minimum: 1
        maximum: 12
      day:
        type: "integer"
        format: "int32"
        minimum: 1
        maximum: 31
      hour:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 23
      minute:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 60
      second:
        type: "integer"
        format: "int32"
        minimum: 0
        maximum: 60
